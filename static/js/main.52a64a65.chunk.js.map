{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","index.js"],"names":["Counter","prevProps","prevState","console","log","className","for","this","props","counter","name","id","role","aria-label","onClick","onDecrement","getBadgeClasses","disabled","formatCount","onIncrement","onDelete","classes","value","Component","Counters","onReset","counters","map","c","NavBar","totalNum","href","App","state","original","handleDelete","counterId","filter","setState","handleIncrement","index","indexOf","handleDecrement","Math","max","handleReset","Fragment","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52a64a65.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Counter.css\";\r\n\r\nclass Counter extends Component {\r\n  //// This piece of code is executed ONLY once when instance of Counter component is created.\r\n  // state = {\r\n  //   value: this.props.counter.value,\r\n  // };\r\n\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.handleIncrement = this.handleIncrement.bind(this);\r\n  //   }\r\n\r\n  //// ***IMPORTANT! You cannot increment a state value by itself. Need to call this.setState()!\r\n  // handleIncrement = () => {\r\n  //// ***IMPORTANT! You also cannot increment a props value. Need to import it as state before altering!\r\n  //// eg. this.props.counter.value += 1\r\n  //   this.setState((state) => {\r\n  //     return { value: state.value + 1 };\r\n  //   });\r\n  // };\r\n\r\n  // handleDecrement = () => {\r\n  //   this.setState((state) => {\r\n  //     return { value: Math.max(0, state.value - 1) };\r\n  //   });\r\n  // };\r\n\r\n  // React will schedule a call to the render method, so\r\n  // at some point in the future we don't know when, the\r\n  // method will be called (asynchronous function)\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"prevProps\", prevProps);\r\n    console.log(\"prevState\", prevState);\r\n    // Using componentDidUpdate, we can decide based on prevProps and prevState if we want to use AJAX to call server to update data\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Counter - Unmount\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Counter - Rendered\");\r\n    return (\r\n      <div className=\"input-group ms-2 mb-4\">\r\n        {/* Name here */}\r\n        <label\r\n          for=\"value\"\r\n          className=\"col-3 col-lg-1 col-form-label fs-5 fw-light\"\r\n        >\r\n          {this.props.counter.name}\r\n        </label>\r\n        <div\r\n          id=\"value\"\r\n          className=\"btn-group btn-group-sm\"\r\n          role=\"group\"\r\n          aria-label=\"Quantity group\"\r\n        >\r\n          {/* Decrement button here */}\r\n          <button\r\n            onClick={() => this.props.onDecrement(this.props.counter)}\r\n            className=\"btn btn-danger\"\r\n          >\r\n            <i\r\n              className=\"bi-chevron-down\"\r\n              role=\"img\"\r\n              aria-label=\"Decrement\"\r\n            ></i>\r\n          </button>\r\n\r\n          {/* Item count here */}\r\n          <button className={this.getBadgeClasses()} disabled>\r\n            {this.formatCount()}\r\n          </button>\r\n\r\n          {/* Increment button here */}\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)}\r\n            className=\"btn btn-success\"\r\n          >\r\n            <i className=\"bi-chevron-up\" role=\"img\" aria-label=\"Increment\"></i>\r\n          </button>\r\n        </div>\r\n        <div\r\n          className=\"btn-group btn-group-sm\"\r\n          role=\"group\"\r\n          aria-label=\"Delete button\"\r\n        >\r\n          {/* Delete */}\r\n          <button\r\n            // ***IMPORTANT! Use inline function in order to pass arguments into the method\r\n            onClick={() => this.props.onDelete(this.props.counter.id)}\r\n            className=\"btn btn-danger mx-3 mx-lg-4\"\r\n          >\r\n            <i className=\"bi-trash-fill\" role=\"img\" aria-label=\"Delete\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"btn custom-button btn-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"dark\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter.jsx\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    console.log(\"Counters - Rendered\");\r\n    const { onReset, onDelete, onIncrement, onDecrement, counters } =\r\n      this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm my-4 ms-2\">\r\n          Reset\r\n        </button>\r\n        {counters.map((c) => (\r\n          <Counter\r\n            key={c.id}\r\n            counter={c}\r\n            onIncrement={onIncrement}\r\n            onDecrement={onDecrement}\r\n            onDelete={onDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n\r\n// Stateless Functional Component\r\n\r\nconst NavBar = ({ totalNum }) => {\r\n  console.log(\"NavBar - Rendered\");\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Counter{\" \"}\r\n          <span className=\"badge badge-md rounded-pill bg-secondary\">\r\n            {totalNum}\r\n          </span>\r\n        </a>\r\n        <a\r\n          className=\"navbar-brand\"\r\n          href=\"https://github.com/huiyuank/react-project-cart\"\r\n        >\r\n          <i\r\n            id=\"githubIcon\"\r\n            className=\"bi-github text-secondary\"\r\n            role=\"img\"\r\n            aria-label=\"GitHub\"\r\n          ></i>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n// class NavBar extends Component {\r\n//   render() {\r\n//     return (\r\n//       <nav className=\"navbar navbar-light bg-light\">\r\n//         <a className=\"navbar-brand\" href=\"#\">\r\n//           Navbar{\" \"}\r\n//           <span className=\"badge badge-md badge-pill badge-secondary\">\r\n//             {this.props.totalNum}\r\n//           </span>\r\n//         </a>\r\n//       </nav>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default NavBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Counters from \"./components/counters.jsx\";\nimport NavBar from \"./components/navbar.jsx\";\n\n// function App() {\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, name: \"Cupcakes\", value: 4 },\n      { id: 2, name: \"Cookies\", value: 0 },\n      { id: 3, name: \"Brownies\", value: 0 },\n      { id: 4, name: \"Tarts\", value: 0 },\n    ],\n    original: [\n      { id: 1, name: \"Cupcakes\", value: 0 },\n      { id: 2, name: \"Cookies\", value: 0 },\n      { id: 3, name: \"Brownies\", value: 0 },\n      { id: 4, name: \"Tarts\", value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    // Perfect place to make AJAX calls to the server to get data.\n    console.log(\"App - Mounted\");\n  }\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  handleIncrement = (counter) => {\n    // Duplicate the counters in a new array\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value += 1;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    const counters = this.state.counters.map((c) => {\n      // counters[index].value = Math.max(val - 1, 0);\n      c.value = c === counter ? Math.max(c.value - 1, 0) : c.value;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    // const counters = this.state.counters.map((c) => {\n    //   c.value = 0;\n    //   return c;\n    // });\n    this.setState({ counters: this.state.original });\n  };\n\n  render() {\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n        <NavBar\n          totalNum={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container-fluid\">\n          <Counters\n            counters={this.state.counters}\n            onDelete={this.handleDelete}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}