{"version":3,"sources":["components/counter.jsx","components/counters.jsx","components/navbar.jsx","App.js","index.js"],"names":["Counter","prevProps","prevState","console","log","className","onClick","props","onIncrement","counter","xmlns","width","height","fill","class","viewBox","fill-rule","d","this","getBadgeClasses","disabled","formatCount","onDecrement","onDelete","id","classes","value","Component","Counters","onReset","counters","map","c","NavBar","totalNum","href","App","state","handleDelete","counterId","filter","setState","handleIncrement","index","indexOf","handleDecrement","Math","max","handleReset","Fragment","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5630587f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Counter.css\";\r\n\r\nclass Counter extends Component {\r\n  //// This piece of code is executed ONLY once when instance of Counter component is created.\r\n  // state = {\r\n  //   value: this.props.counter.value,\r\n  // };\r\n\r\n  //   constructor() {\r\n  //     super();\r\n  //     this.handleIncrement = this.handleIncrement.bind(this);\r\n  //   }\r\n\r\n  //// ***IMPORTANT! You cannot increment a state value by itself. Need to call this.setState()!\r\n  // handleIncrement = () => {\r\n  //// ***IMPORTANT! You also cannot increment a props value. Need to import it as state before altering!\r\n  //// eg. this.props.counter.value += 1\r\n  //   this.setState((state) => {\r\n  //     return { value: state.value + 1 };\r\n  //   });\r\n  // };\r\n\r\n  // handleDecrement = () => {\r\n  //   this.setState((state) => {\r\n  //     return { value: Math.max(0, state.value - 1) };\r\n  //   });\r\n  // };\r\n\r\n  // React will schedule a call to the render method, so\r\n  // at some point in the future we don't know when, the\r\n  // method will be called (asynchronous function)\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log(\"prevProps\", prevProps);\r\n    console.log(\"prevState\", prevState);\r\n    // Using componentDidUpdate, we can decide based on prevProps and prevState if we want to use AJAX to call server to update data\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Counter - Unmount\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Counter - Rendered\");\r\n    return (\r\n      <div>\r\n        <section className=\"btn-group-vertical btn-group-sm\">\r\n          {/* Increment button here */}\r\n          <button\r\n            onClick={() => this.props.onIncrement(this.props.counter)}\r\n            className=\"btn btn-secondary btn-success p-1 mx-2 my-1\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-chevron-up\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          {/* Item count here */}\r\n          <button className={this.getBadgeClasses()} disabled>\r\n            {this.formatCount()}\r\n          </button>\r\n\r\n          {/* Decrement button here */}\r\n          <button\r\n            onClick={() => this.props.onDecrement(this.props.counter)}\r\n            className=\"btn btn-secondary btn-danger p-1 mx-2 my-1\"\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"16\"\r\n              height=\"16\"\r\n              fill=\"currentColor\"\r\n              class=\"bi bi-chevron-down\"\r\n              viewBox=\"0 0 16 16\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </section>\r\n\r\n        <button\r\n          // ***IMPORTANT! Use inline function in order to pass arguments into the method\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          className=\"btn btn-danger btn-sm mx-4 my-5\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"btn custom-button mx-2 p-2 btn-\";\r\n    classes += this.props.counter.value === 0 ? \"warning\" : \"dark\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? \"Zero\" : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter.jsx\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    console.log(\"Counters - Rendered\");\r\n    const {\r\n      onReset,\r\n      onDelete,\r\n      onIncrement,\r\n      onDecrement,\r\n      counters,\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        <button onClick={onReset} className=\"btn btn-primary btn-sm m-2\">\r\n          Reset\r\n        </button>\r\n        {counters.map((c) => (\r\n          <Counter\r\n            key={c.id}\r\n            counter={c}\r\n            onIncrement={onIncrement}\r\n            onDecrement={onDecrement}\r\n            onDelete={onDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n\r\n// Stateless Functional Component\r\n\r\nconst NavBar = ({ totalNum }) => {\r\n  console.log(\"NavBar - Rendered\");\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light\">\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Counter{\" \"}\r\n          <span className=\"badge badge-md rounded-pill bg-secondary\">\r\n            {totalNum}\r\n          </span>\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n// class NavBar extends Component {\r\n//   render() {\r\n//     return (\r\n//       <nav className=\"navbar navbar-light bg-light\">\r\n//         <a className=\"navbar-brand\" href=\"#\">\r\n//           Navbar{\" \"}\r\n//           <span className=\"badge badge-md badge-pill badge-secondary\">\r\n//             {this.props.totalNum}\r\n//           </span>\r\n//         </a>\r\n//       </nav>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default NavBar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Counters from \"./components/counters.jsx\";\nimport NavBar from \"./components/navbar.jsx\";\n\n// function App() {\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n    ],\n  };\n\n  constructor() {\n    super();\n    console.log(\"App - Constructor\");\n  }\n\n  componentDidMount() {\n    // Perfect place to make AJAX calls to the server to get data.\n    console.log(\"App - Mounted\");\n  }\n\n  handleDelete = (counterId) => {\n    const counters = this.state.counters.filter((c) => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  handleIncrement = (counter) => {\n    // Duplicate the counters in a new array\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = { ...counter };\n    counters[index].value += 1;\n    this.setState({ counters });\n  };\n\n  handleDecrement = (counter) => {\n    const counters = this.state.counters.map((c) => {\n      // counters[index].value = Math.max(val - 1, 0);\n      c.value = c === counter ? Math.max(c.value - 1, 0) : c.value;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map((c) => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  render() {\n    console.log(\"App - Rendered\");\n    return (\n      <React.Fragment>\n        <NavBar\n          totalNum={this.state.counters.filter((c) => c.value > 0).length}\n        />\n        <main className=\"container-fluid\">\n          <Counters\n            counters={this.state.counters}\n            onDelete={this.handleDelete}\n            onReset={this.handleReset}\n            onIncrement={this.handleIncrement}\n            onDecrement={this.handleDecrement}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}